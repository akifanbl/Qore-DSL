model menu{
  name str [unique:true]
  stock int [default:0]
  price int [nullable:false]
}
model transaction {
  timestamp datetime
  food menu ManyToOne OnDelete:SET NULL
  quantity int [nullable:false default:0]
}
model employee{
  user user OneToMany OnDelete:CASCADE OnUpdate:CASCADE nullable:true
  full_name str
  age int
  gender str
  salary int
}
role employee{
  select [employee["user.id == external_id"]]
  select insert update delete [menu]
}
role manager {
  select insert update delete [employee menu transaction]
}
view pricey_menu:menu {
  condition "price > 100000"
  populate []
  limit 5
  offset 10
  groupBy [id]
  join left
}
index nama_index{
  table tabel
  columns [kol1 kol2]
  type brin
  condition "true"
  unique:true
}

Query example
create a library management application that displays a list of books, student profiles, and records all books borrowed by students. Librarians can take any action on the data while students can only view book data